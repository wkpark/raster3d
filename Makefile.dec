#
# Raster3D makefile for Alpha OSF / Digital Unix 4.0
#
#          f77 compiler seems to be fine
#	   f90 compiler is broken above optimization level O1
#	       (you can see this in example6 - objects seen through transparent
#	        surface are not colored correctly)
#
LDFLAGS = 
CFLAGS  = -O $(INCLUDES)
#FC	= f90
#FFLAGS	= -O1 -fast -static -d_lines
FC	= f77
FFLAGS  = -O -fast -static -w1 -d_lines
#FFLAGS  = -g -static -w1 -d_lines
#
# If you choose to build Raster3D with support for direct output of
# TIFF image files, then add -DTIFF_SUPPORT to the DEFINES statement.
# You will also need to add -ltiff to the LIBS definition.
# The TIFF_INVERT option is a work-around for broken programs
# (e.g. PhotoShop) that don't properly read the TIFF header.
#
 LIBS    =	-ltiff
 DEFINES =	-DTIFF_SUPPORT -DTIFF_INVERT
#LIBS    =
#DEFINES =

INCLUDES = -I/usr/local/include/ -I/usr/local/include/jpeg

RIBOBJS =	ribbon.o ribbon1.o modsubs.o
PROGS   =	balls normal3d rastep rods ribbon render setup avs2ps

all:	$(PROGS)

clean:
	rm -f *.o *.u core
	rm -f $(PROGS)
	rm -f render_jpeg

install: $(PROGS)
	mv $(PROGS) /usr/local/bin
	cp stereo3d /usr/local/bin
	cp doc/*.l /usr/local/man/manl

tar:
	(cd ..; tar -cvvf raster3d.tar raster3d)
#	/usr/bin/compress  ../raster3d.tar

normal3d: normal3d.o quadric.o
	$(FC) $(FFLAGS) normal3d.o quadric.o -o normal3d

rastep:	rastep.o quadric.o
	$(FC) $(FFLAGS) rastep.o quadric.o -o rastep

ribbon:	$(RIBOBJS)
	$(FC) -O $(RIBOBJS) -o ribbon

local.o: local.c
	cc $(CFLAGS) $(INCLUDES) $(DEFINES) -c local.c

local_jpeg.o: local_jpeg.c
	cc -g $(INCLUDES) $(DEFINES) -c local_jpeg.c

render:	render.f local.o quadric.o
	$(FC) $(FFLAGS) render.f quadric.o local.o \
	$(LIBS) -o render $(LDFLAGS)

render_jpeg: render.o local_jpeg.o quadric.o
	$(FC) $(LDFLAGS) render.o quadric.o local_jpeg.o \
	-ljpeg -o render_jpeg

avs2ps:	avs2ps.c
	cc -O avs2ps.c -o avs2ps -lm

setup:	balls
	ln -s balls setup
