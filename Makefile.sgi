#
# Raster3D makefile for SGI Irix V5.3
# (for Irix V6.x use Makefile.irix6 instead)
#
include VERSION
#
LDFLAGS = 
CFLAGS  = -g -w $(INCLUDES)
FC	= f77
FFLAGS	= -g

#
# Render really benefits from optimization, so try to get this right.
# These are the optimizations recommended on my test machine;
# Yours may vary
FOPTS	= -O -Olimit 3600

#
# TIFF support (enabled by default)
#     add -DTIFF_SUPPORT to the DEFINES statement.
#     add -ltiff to the LIBS definition.
# The TIFF_INVERT option is a work-around for broken programs
# (e.g. PhotoShop) that don't properly read the TIFF header.
#
# JPEG support (disabled by default)
#     add -DJPEG_SUPPORT to the DEFINES statement.
#     add -ljpeg to the LIBS definition.
#
# Auto conversion of output using ImageMagick (enabled by default)
#     add -DIMAGEPIPE to the DEFINES statement.
#
# SGI imagetools support (-sgi output option to produce *.rgb files)
#     add -DLIBIMAGE_SUPPORT to the DEFINES statement.
#     add -limage to the LIBS definition
#         (source for libimage.a is available in the 4DGifts kit from SGI)
#
 LIBS    =	-ltiff -limage
 DEFINES =	-DTIFF_SUPPORT -DTIFF_INVERT \
		-DIMAGEPIPE -DLIBIMAGE_SUPPORT
INCLUDES =	-I/usr/local/include/

RIBOBJS =	ribbon.o ribbon1.o modsubs.o
PROGS   =	balls normal3d rastep rods ribbon render avs2ps rings3d

all:	$(PROGS)

clean:
	rm -f *.o *.u core
	rm -f $(PROGS)

install: $(PROGS)
	mv $(PROGS) /usr/local/bin
	cp doc/*.l /usr/local/man/manl
	cp stereo3d /usr/local/bin/
	cp label3d  /usr/local/bin/
	@echo "	*******************************************"
	@echo "	* If you want support for labels then you *"
	@echo "	* must also run 'make' and 'make install' *"
	@echo "	* in the labels/ subdirectory.            *"
	@echo "	*                                         *"
	@echo "	* The examples/ subdirectory contains     *"
	@echo "	* files to verify your installation and   *"
	@echo "	* to serve as examples of use.            *"
	@echo "	*******************************************"

tar:
	(cd ..; tar -cvf Raster3D_$(VERSION).tar raster3d)
	/usr/bin/compress  ../Raster3D_$(VERSION).tar
	(cd ..; gtar -czvf Raster3D_$(VERSION).tar.gz raster3d)

normal3d: normal3d.o quadric.o ungz.o
	$(FC) $(FFLAGS) normal3d.o quadric.o ungz.o -o normal3d

rastep:	rastep.o quadric.o suv.o
	$(FC) $(FFLAGS) rastep.o quadric.o suv.o -o rastep

ribbon:	$(RIBOBJS)
	$(FC) -O $(RIBOBJS) -o ribbon

local.o: local.c
	cc $(CFLAGS) $(INCLUDES) $(DEFINES) -c local.c

ungz.o: ungz.c
	cc $(CFLAGS) -DGUNZIP -c ungz.c

render.o: render.f
	$(FC) $(FOPTS) -c render.f

render:	render.o local.o quadric.o parse.o r3dtops.o ungz.o
	$(FC) $(FFLAGS) render.o quadric.o local.o parse.o r3dtops.o ungz.o \
	$(LIBS) -o render $(LDFLAGS)

avs2ps:	avs2ps.c
	cc -O avs2ps.c -o avs2ps -lm

