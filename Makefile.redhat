#
# Raster3D makefile for Redhat distribution of linux
# EAM - tested under Redhat 4.2 and Redhat 6.1
#
# Redhat 4.2 uses the perl script fort77 [locally called f77] 
# as a Fortran compiler
# Redhat 6.1 uses g77
# On my machines both of these answer to "f77", but possibly 
# you would have to change the definition of FC below to one 
# or the other.
#
include VERSION

#
# Where to put things
#
prefix = /usr/local
bindir = $(prefix)/bin
mandir = $(prefix)/man/manl

#
# Compiler options
#
CC 	= gcc
F2 	= f2c
FC 	= f77
RM 	= /bin/rm -f
INSTALL	= /usr/bin/install -o root -g root

LDFLAGS  = 
CFLAGS   = -g -m486 
FFLAGS   = -O -w

#
# TIFF support (enabled by default)
#     add -DTIFF_SUPPORT to the DEFINES statement.
#     add -ltiff to the LIBS definition.
# The TIFF_INVERT option is a work-around for broken programs
# (e.g. PhotoShop) that don't properly read the TIFF header.
#
#
# JPEG support (enabled by default)
#     add -DJPEG_SUPPORT to the DEFINES statement.
#     add -ljpeg to the LIBS definition.
#
# Auto conversion of output using ImageMagick (enabled by default)
#     add -DIMAGEPIPE to the DEFINES statement.
#

 LIBS    =	-ltiff -ljpeg
 DEFINES =	-DLINUX -DTIFF_SUPPORT -DTIFF_INVERT -DNETWORKBYTEORDER \
		-DJPEG_SUPPORT -DIMAGEPIPE
INCLUDES =	-I/usr/include

RIBOBJS  =	ribbon.o ribbon1.o modsubs.o
PROGS    =	balls rastep rods ribbon render avs2ps normal3d

all:	$(PROGS)

clean:
	rm -f *.o *.u core
	rm -f $(PROGS)

install: $(PROGS)
	$(INSTALL) -m 755 $(PROGS) $(bindir)
	$(INSTALL) -m 755 stereo3d $(bindir)
	$(INSTALL) -m 755 label3d $(bindir)
	$(INSTALL) -m 644 doc/*.l $(mandir)
	@echo "	*******************************************"
	@echo "	* The examples/ subdirectory contains     *"
	@echo "	* files to verify your installation and   *"
	@echo "	* to serve as examples of use.            *"
	@echo "	*******************************************"

tar:
	(cd ..; tar -czvf Raster3D_$(VERSION).tar.gz raster3d)

ribbon:	$(RIBOBJS)
	$(FC) $(LDFLAGS) $(RIBOBJS) -o ribbon

rods:
	$(FC) $(FFLAGS) rods.f $(CFLAGS) $(LDFLAGS) -o rods

balls:
	$(FC) $(FFLAGS) balls.f $(CFLAGS) $(LDFLAGS) -o balls

local.o: local.c
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -c local.c

quadric.o: quadric.f

render:	render.f local.o quadric.o parse.o r3dtops.o
	$(FC) $(FFLAGS) render.f local.o quadric.o parse.o r3dtops.o \
	$(LIBS) -o render

normal3d: normal3d.f.bak normal3d.f quadric.o
	$(FC) $(FFLAGS) normal3d.f quadric.o -o normal3d

normal3d.f.bak:
	mv normal3d.f normal3d.f.bak
	grep -v CARRIAGECONTROL normal3d.f.bak > normal3d.f

avs2ps:	avs2ps.c
	$(CC) $(CFLAGS) $(LDFLAGS) avs2ps.c -o avs2ps -lm


rastep: rastep.f.bak rastep.f quadric.o
	$(FC) $(FFLAGS) rastep.f quadric.o -o rastep

rastep.f.bak:
	mv rastep.f rastep.f.bak
	grep -v CARRIAGECONTROL rastep.f.bak > rastep.f
