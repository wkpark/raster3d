#
# Raster3D makefile for HPUX
# (Thanks to Andrew Dalke!)
#
# +E7 is equivalent to -static
#
LDFLAGS =
CFLAGS  = -O -L/usr/local/lib -Aa
FC	= f77
FFLAGS  = -O +E7 +U77
#
#
# If you choose to build Raster3D with support for direct output of
# TIFF image files, then add -DTIFF_SUPPORT to the DEFINES statement.
# You will also need to add -ltiff to the LIBS definition.
# The "-W,l" is needed to pass the -L option to the compiler
#  (normally -L prints the program to standard output during compilation)
# The TIFF_INVERT option is a work-around for broken programs
# (e.g. PhotoShop) that don't properly read the TIFF header.
#
#LIBS    =	-Wl,-L/usr/local/lib -ltiff
#DEFINES =	-DTIFF_SUPPORT -DTIFF_INVERT
#
 LIBS    =	-Wl,-L/usr/local/lib
 DEFINES =	
INCLUDES =	-I/usr/local/include/ -I/usr/local/include/tiff

RIBOBJS =	ribbon.o ribbon1.o modsubs.o
PROGS   =	balls normal3d rastep rods ribbon render setup avs2ps

all:	$(PROGS)

clean:
	rm -f *.o *.u core
	rm -f $(PROGS) render_hpux.f
	rm -f render_jpeg

install: $(PROGS)
	mv $(PROGS) /usr/local/bin
	cp stereo3d /usr/local/bin
	cp doc/*.l /usr/local/man/manl

tar:
	(cd ..; tar -cvvf raster3d.tar raster3d)
	compress  ../raster3d.tar

normal3d: normal3d.o quadric.o
	$(FC) $(FFLAGS) normal3d.o quadric.o -o normal3d

rastep:	rastep.o quadric.o
	$(FC) $(FFLAGS) rastep.o quadric.o -o rastep

ribbon:	$(RIBOBJS)
	$(FC) $(LDFLAGS) $(FFLAGS) -O $(RIBOBJS) -o ribbon

local.o: local.c
	cc $(CFLAGS) $(INCLUDES) $(DEFINES) -c local.c

render:	render.f local.o quadric.o
	$(FC) $(FFLAGS) render.f quadric.o local.o \
	$(LIBS) -o render $(LDFLAGS)

local_jpeg.o: local_jpeg.c
	cc $(CFLAGS) $(INCLUDES) $(DEFINES) -c local_jpeg.c

render_jpeg: render.o local_jpeg.o quadric.o
	$(FC) $(LDFLAGS) render.o quadric.o local_jpeg.o \
	-ljpeg -o render_jpeg

# HPs don't have "random" -- use drand48 instead
avs2ps:	avs2ps.c
	cc -O avs2ps.c -o avs2ps -lm -Drandom=drand48

setup:	balls
	ln -s balls setup
