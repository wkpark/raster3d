#
# Raster3D makefile for SunOS (g77)
#

CC	= gcc
FC	= g77
LDFLAGS =
CFLAGS  = -O
FFLAGS  = -O -w

#
#
# TIFF support (enabled by default)
#     add -DTIFF_SUPPORT to the DEFINES statement.
#     add -ltiff to the LIBS definition.
# The TIFF_INVERT option is a work-around for broken programs
# (e.g. PhotoShop) that don't properly read the TIFF header.
#
#
# JPEG support (disabled by default)
#     add -DJPEG_SUPPORT to the DEFINES statement.
#     add -ljpeg to the LIBS definition.
#
# Auto conversion of output using ImageMagick (enabled by default)
#     add -DIMAGEPIPE to the DEFINES statement.
#

LIBS    = -L/usr/local/lib -ltiff -L/usr/local/lib/gcc-lib/sparc-sun-sunos4.1.3_U1/2.6.2 -lgcc
DEFINES = -DTIFF_SUPPORT -DIMAGEPIPE -DTIFF_INVERT
INCLUDES= -I/usr/local/include/ -I/usr/local/include/tiff

RIBOBJS = ribbon.o ribbon1.o modsubs.o
PROGS   = balls normal3d rastep rods ribbon render avs2ps rings3d

all:	$(PROGS)

clean:
	rm -f *.o *.u core
	rm -f $(PROGS)

install: $(PROGS)
	mv $(PROGS) /usr/local/bin
	cp doc/*.l /usr/local/man/manl
	cp stereo3d /usr/local/bin/
	cp label3d  /usr/local/bin/
	@echo "	*******************************************"
	@echo "	* The examples/ subdirectory contains     *"
	@echo "	* files to verify your installation and   *"
	@echo "	* to serve as examples of use.            *"
	@echo "	*******************************************"

tar:
	(cd ..; tar -cvvf raster3d.tar raster3d)
	compress  ../raster3d.tar

rastep: rastep.f.bak rastep.f quadric.o suv.o
	$(FC) $(FFLAGS) rastep.f quadric.o suv.o -o rastep

rastep.f.bak:
	mv rastep.f rastep.f.bak
	grep -v CARRIAGECONTROL rastep.f.bak > rastep.f

ribbon:	$(RIBOBJS)
	$(FC) -O $(RIBOBJS) -o ribbon

local.o: local.c
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFINES) -c local.c

ungz.o:	ungz.c
	$(CC) $(CFLAGS) -DGUNZIP -c ungz.c

render.f.bak:
	mv render.f render.f.bak
	egrep -v '(CARRIAGECONTROL|DISPOSE)' render.f.bak > render.f

render:	render.f.bak local.o quadric.o parse.o r3dtops.o ungz.o
	$(FC) $(FFLAGS) render.f local.o quadric.o parse.o r3dtops.o ungz.o \
	$(LIBS) -o render

normal3d: normal3d.f.bak normal3d.f quadric.o ungz.o
	$(FC) $(FFLAGS) normal3d.f quadric.o ungz.o -o normal3d

normal3d.f.bak:
	mv normal3d.f normal3d.f.bak
	egrep -v '(CARRIAGECONTROL|DISPOSE)' normal3d.f.bak > normal3d.f

avs2ps:	avs2ps.c
	$(CC) -O avs2ps.c -o avs2ps -lm

